/*

VC, GCC에서 사용

*/
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int n,m;	//맵 size
int x,y; 	//시작 위치
int map[101][101];	//맵
int vist[101][101];	//방문여부 및 최소시간
int Queue[999999];
int front,rear;
void Call_Bfs_1(int x, int y)
{
	int i;
	int data_x, data_y;	// 큐 x, y
	int cal_x, cal_y;	// 계산된 x, y
	int dir[4][2] = { { -1, 0 }, { 0, -1 }, { 1, 0 }, { 0, 1 } };

	Queue[rear++] = x;	//enqueue
	Queue[rear++] = y;	//enqueue
	while(rear != front)
	{
		data_x = Queue[front++];   //dequeue
		data_y = Queue[front++];   //dequeue
		for(i=0;i<4;i++)
		{
			cal_x = (data_x + dir[i][0]);
			cal_y = (data_y + dir[i][1]);

			if( cal_x < 0 || cal_x >=m || cal_y < 0 || cal_y >= n)	//맵 범위 초과
				continue;

			if(map[cal_x][cal_y]==0)	//접근못하는 곳
				continue;

			//만약 방문 했고, 이전 크기가 크면 continue;
			if(vist[cal_x][cal_y] != 0 && vist[data_x][data_y] + 1 >= vist[cal_x][cal_y])
				continue;

			vist[cal_x][cal_y] = vist[data_x][data_y] + 1;
			Queue[rear++] = cal_x;
			Queue[rear++] = cal_y;
		}
	}
}

int main()
{
	int max;
	int i,j;
	int itr;
	int nCount;		/* 문제의 테스트 케이스 */

	scanf("%d", &nCount);	/* 테스트 케이스 입력 */

	for(itr=0; itr<nCount; itr++)
	{

		printf("#testcase%d\n",itr+1);
		scanf("%d %d",&n,&m);
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				vist[i][j] = 0;		//방문했다면 0으로 값을 지정한다
				scanf("%d",&map[i][j]);
			}
		}
		scanf("%d %d",&x,&y);
		x--;y--;	//좌표값은 0 에서 시작함으로
		
		front = rear = 0;
		Call_Bfs_1(y,x);

		/*
		printf("\n");
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				printf("%3d",vist[i][j]);
			}
			printf("\n");
		}
		
			printf("\n");
			*/

		max=0;
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				if(vist[i][j]> max)
				{
				max = vist[i][j];
				}
			}
		}
		printf("%d\n",max+1);
	}

	return 0;	/* 반드시 return 0으로 해주셔야합니다. */ 

}