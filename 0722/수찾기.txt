#include <stdio.h>
int data[1000000];
int binarysearch(int data[], int head, int tail, int number){
		int mid;
		while (head <= tail){
			mid = (head + tail) / 2;
			if (data[mid] == number){
				return 1;
			}
			else if (data[mid] > number){
				tail= mid - 1;
			}
			else if (data[mid] < number){
				head = mid + 1;
			}

		}
		return 0;

}
void quick_sort(int data[], int left, int right){
	int p = left; int q = right - 1;
	int pivot = right; 
	int temp;
	if (left < right){
		while (1){
			while (data[pivot] > data[p]) p++;
			while (data[pivot] <= data[q]) q--;
			if (p > q) break;
			temp = data[p];
			data[p] = data[q];
			data[q] = temp;
		}
		temp = data[p];
		data[p] = data[pivot];
		data[pivot] = temp;

		quick_sort(data, left, p - 1);
		quick_sort(data, p + 1, right);
	}
}
int main(){
	int n, m;
	int i;
	int number;
	scanf("%d", &n);
	for (i = 0; i < n; i++){
		scanf("%d", &data[i]);
	}
	quick_sort(data, 0, n - 1);
	scanf("%d", &m);
	for (i = 0; i < m; i++)
	{
		scanf("%d", &number);
		printf("%d\n", binarysearch(data, 0, n - 1, number));
	}
	return 0;
}