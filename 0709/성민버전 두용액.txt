#include <stdio.h>
#include <math.h>

int data[100000];

void swap(int* a, int* b){
   int tmp = *a;
   *a = *b;
   *b = tmp;
}

void quick_sort(int* array, int start, int end){

   if (start >= end) return;

   int mid = (start + end) / 2;
   int pivot = array[mid];

   swap(&array[start], &array[mid]);

   int p = start + 1, q = end;

   while (1){
      while (array[p] <= pivot){ p++; }
      while (array[q]>pivot){ q--; }

      if (p>q) break;

      swap(&array[p], &array[q]);
   }

   swap(&array[start], &array[q]);

   quick_sort(array, start, q - 1);
   quick_sort(array, q + 1, end);
}

int main(){
   int itr, n, i, a, b;
   int nCount;

   scanf_s("%d", &nCount);

   for (itr = 0; itr<nCount; itr++){

      printf("#testcase%d\n", itr + 1);
      scanf_s("%d", &n);

      for (i = 0; i < n; i++)
         scanf_s("%d", &data[i]);

      // sort
      quick_sort(data, 0, n-1);

      int min = 1000000000, result = 0, i = 0, j = n - 1;
      while ( i < j ){
         result = data[i] + data[j];
         if (abs(result) < min){
            min = abs(result);
            a = i; b = j;
         }

         if (result < 0) i++;
         else j--;
      }

      printf("%d %d\n", data[a], data[b]);
   }

   return 0;
} 