#include <stdio.h>
int m, n;
char temp[101][101];
int map[101][101];
int front, rear;    //bfs문제
int Queue[90000];
int visit[101][101];
void call_bps(int x, int y){
	int i;
	int data_x, data_y;
	int cal_x, cal_y;
	int dir[4][2] = { { -1, 0 }, { 0, -1 },{1, 0}, { 0, 1 } };


	Queue[rear++] = x;
	Queue[rear++] = y;
	while (rear != front){
		data_x = Queue[front++];
		data_y = Queue[front++];
		for (i = 0; i < 4; i++){
			cal_x = (data_x + dir[i][0]);
			cal_y = (data_y + dir[i][1]);
			if (cal_x < 0 || cal_x >= m || cal_y < 0 || cal_y >= n)
				continue;
			
			if (map[cal_x][cal_y] == -1)
				continue;

			if (visit[cal_x][cal_y] != 0 && visit[data_x][data_y] + 1 >= visit[cal_x][cal_y])
				continue;

			visit[cal_x][cal_y] = visit[data_x][data_y]+1;
			Queue[rear++] = cal_x;
			Queue[rear++] = cal_y;
			}
		}
	}


int main()
{
	int itr;
	int nCount;		/* 문제의 테스트 케이스 */
	int q, w;
	scanf("%d", &nCount);	/* 테스트 케이스 입력 */

	for (itr = 0; itr<nCount; itr++)
	{

		printf("#testcase%d\n", itr + 1);
		
		scanf("%d %d",&m,&n);

		for (q = 0; q < m; q++){
			
				scanf("%s", &temp[q]);
			
		}
		for (q = 0; q < m; q++){
			for (w = 0; w < n; w++){
				if (temp[q][w] == '1')
					map[q][w] = -1;
			}
		}
		visit[m-1][0] = 1;
		call_bps(m-1, 0);
	/*	for (q = 0; q < m; q++){
			for (w = 0; w < n; w++){
				printf("%d ", visit[q][w]);
			}
			printf("\n");
		}*/
		printf("%d\n", visit[0][n-1]);
		
		
		for (q = 0; q < 101; q++){
			for (w = 0; w < 101; w++){
				visit[q][w] = 0;
				map[q][w] = 0;
			}
		}
		
	}
	return 0;	/* 반드시 return 0으로 해주셔야합니다. */
}